[{"E:\\Projects\\checkout\\src\\index.js":"1","E:\\Projects\\checkout\\src\\reportWebVitals.js":"2","E:\\Projects\\checkout\\src\\components\\OrderSummaryPart.js":"3","E:\\Projects\\checkout\\src\\components\\PaymentMethodPart.js":"4","E:\\Projects\\checkout\\src\\App.js":"5","E:\\Projects\\checkout\\src\\components\\ShippingAddressPart.js":"6","E:\\Projects\\checkout\\src\\components\\ShippingMethodPart.js":"7","E:\\Projects\\checkout\\src\\components\\LoginPart.js":"8","E:\\Projects\\checkout\\src\\GeneralFunctions\\Constants.js":"9","E:\\Projects\\checkout\\src\\DataAction\\Checkout.js":"10"},{"size":758,"mtime":1626438315439,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607584685282,"results":"13","hashOfConfig":"12"},{"size":12131,"mtime":1637831458914,"results":"14","hashOfConfig":"12"},{"size":37433,"mtime":1638284249345,"results":"15","hashOfConfig":"12"},{"size":29717,"mtime":1638286934246,"results":"16","hashOfConfig":"12"},{"size":14725,"mtime":1638279593718,"results":"17","hashOfConfig":"12"},{"size":9818,"mtime":1626685346052,"results":"18","hashOfConfig":"12"},{"size":6170,"mtime":1637827006059,"results":"19","hashOfConfig":"12"},{"size":332,"mtime":1626341681939,"results":"20","hashOfConfig":"12"},{"size":6195,"mtime":1638268430405,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1biz2nv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Projects\\checkout\\src\\index.js",[],["49","50"],"E:\\Projects\\checkout\\src\\reportWebVitals.js",[],["51","52"],"E:\\Projects\\checkout\\src\\components\\OrderSummaryPart.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],"import './style.css';\r\nimport { Container, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\r\nimport { getCartDetails } from '../DataAction/Checkout';\r\nimport Cookies from 'universal-cookie';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faPhoneAlt, faComment, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction OrderSummaryPart(props) {\r\n    const { isGuest, isLogin, selectedShippingMethod, user, cartDetails, subTotal, grandTotal, georgiaTax } = props\r\n    const cookies = new Cookies();\r\n\r\n    const [state, setState] = useState({\r\n        validated: false,\r\n        // cartDetails: [],\r\n        isDetailShow: false,\r\n\r\n    });\r\n    const { isDetailShow } = state\r\n\r\n    const toFixedNumber = (number) => {\r\n        return parseFloat(number.toFixed(2))\r\n    }\r\n    const toggleChat = (number) => {\r\n\r\n        window.Tawk_API.toggle()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        window.Tawk_API = window.Tawk_API || {};\r\n        (function () {\r\n            var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n            s1.async = true;\r\n            s1.src = 'https://embed.tawk.to/5684ee0d54db70e54cd03114/default';\r\n            s1.charset = 'UTF-8';\r\n            s1.setAttribute('crossorigin', '*');\r\n            s0.parentNode.insertBefore(s1, s0);\r\n        })();\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('heopkfd', selectedShippingMethod)\r\n    //     if(selectedShippingMethod.PriceAmount !== undefined){\r\n    //         let tempGrandTotal = 0\r\n    //         tempGrandTotal = subTotal + selectedShippingMethod.PriceAmount\r\n    //         console.log('checl', tempGrandTotal)\r\n    //         setState({...state, grandTotal: tempGrandTotal})\r\n    //     }\r\n    // }, [selectedShippingMethod]);\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log('asasdasas', isLogin)\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            event.preventDefault()\r\n            const formData = new FormData(event.target)\r\n            const formDataObj = Object.fromEntries(formData.entries())\r\n            console.log(formDataObj)\r\n            props.onLoginClick()\r\n        }\r\n        setState({ ...state, validated: true });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='summaryContainer'>\r\n\r\n\r\n                <Row className='' >\r\n                    <Col style={{ flex: 0.75 }} className='pr-0'>\r\n                        <h5 style={{ marginBottom: 0 }}>SHOPPING CART <span className='itemCount'>({cartDetails.length} item)</span></h5>\r\n\r\n                    </Col>\r\n                    <Col style={{ flex: 0.25 }}>\r\n                        <a onClick={() => { setState({ ...state, isDetailShow: !isDetailShow }) }} style={{ display: 'flex', float: 'right', textAlign: 'right', color: '#052355', cursor: 'pointer', fontWeight: 500 }}>Details <FontAwesomeIcon icon={faChevronDown} style={{ fontSize: 11, display: 'inline-block', float: 'right', marginTop: 8, marginLeft: 4, }} /></a>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                {isDetailShow && cartDetails.map(cart => (\r\n                    <Row className='' style={{ margin: '10px 0px 0 0', }} >\r\n\r\n                        <Col xs={3} className='pl-0'>\r\n                            <img style={{ width: '100%', height: 'auto', marginTop: 7, maxWidth: '72px', }} src={`https://cdn.pulseuniform.com/stylepic/Colorpic/450/${cart.STYLECODE}${cart.COLORCODE}LRL.jpg`} />\r\n                        </Col>\r\n\r\n                        <Col xs={8} style={{ padding: 0 }}>\r\n                            <div><p style={{ fontSize: 13, fontWeight: 500, marginBottom: 2, }}>{cart.STYLENAME}</p></div>\r\n                            <Row style={{ margin: 0, padding: 0 }}>\r\n                                {cart.COLORCODE !== null && <div xs={4}><p style={{ fontSize: 13, fontWeight: 500, marginBottom: 2, marginRight: 8 }}>{`Color: ${cart.COLORCODE}-${cart.COLORNAME}`}</p></div>}\r\n                                {cart.SIZENAME !== null && <div xs={4}><p style={{ fontSize: 13, fontWeight: 500, marginBottom: 2, marginRight: 8 }}>{`Size: ${cart.SIZENAME}`}</p></div>}\r\n                                <div xs={4}><p style={{ fontSize: 13, fontWeight: 500, marginBottom: 2, marginRight: cart.COLORCODE !== null ? 8 : 0 }}>{`Qty: ${cart.QUANTITY}`}</p></div>\r\n                            </Row>\r\n                            <div><p style={{ fontSize: 13, fontWeight: 700, marginBottom: 2, }}>{`Price: $${toFixedNumber(cart.ItemPrice * cart.QUANTITY)}`}</p></div>\r\n                            {cart.ISEMB && <div><p style={{ fontSize: 13, fontWeight: 500, marginBottom: 2, }}><a target='_blank' onClick={() => { window.open(`https://www.pulseuniform.com/checkout/embdetails.asp?shopid=${cart.SHOPID}`, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes'); }} style={{ cursor: 'pointer', color: '#d83442' }}>View Embroidery Details</a></p></div>}\r\n\r\n                        </Col>\r\n\r\n                        <div style={{ float: 'left', width: '100%', height: 1, backgroundColor: 'rgb(226 229 244)', margin: '10px 0px 0 0', }}></div>\r\n\r\n                    </Row>))\r\n\r\n                }\r\n                <a href='https://www.pulseuniform.com/shoppingcart.asp' className='edit-cart'>Edit Cart</a>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='sb_help_panel'>\r\n                <h3>Need help?</h3>\r\n                <p className=\"inr inr992\"> <FontAwesomeIcon icon={faPhoneAlt} style={{ fontSize: 12, display: 'inline-block', float: 'left', marginTop: 6, marginRight: 6, }} /> <a href=\"tel:+18669678573\"> 1.866.967.8573</a></p>\r\n                <p className=\"inr inr992 \"><FontAwesomeIcon icon={faComment} style={{ fontSize: 12, display: 'inline-block', float: 'left', marginTop: 6, marginRight: 6, }} /><a href=\"#chat\" onClick={toggleChat}> Live Chat</a></p>\r\n                <p className=\"inr\" style={{ marginRight: 0 }}><FontAwesomeIcon icon={faEnvelope} style={{ fontSize: 12, display: 'inline-block', float: 'left', marginTop: 6, marginRight: 6, }} /><a href=\"mailto:csr@pulseuniform.com\"> csr@pulseuniform.com</a></p>\r\n            </div>\r\n\r\n\r\n            <div className='summaryContainer' style={{ marginTop: 20 }}>\r\n                <Row className='' >\r\n                    <Col>\r\n                        <h5 >ORDER SUMMARY</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='summeryTxt'>\r\n                    <Col xs={8}>Subtotal</Col>\r\n                    <Col xs={4} style={{ textAlign: 'right' }}>{`$${subTotal.toFixed(2)}`}</Col>\r\n                </Row>\r\n                {Object.keys(selectedShippingMethod).length > 0 && <Row className='summeryTxt'>\r\n                    <Col xs={8} >Shipping [{selectedShippingMethod.webname}]</Col>\r\n                    <Col xs={4} style={{ textAlign: 'right' }}>{selectedShippingMethod.PriceAmount == 0 ? 'Free' : `$${selectedShippingMethod.PriceAmount.toFixed(2)}`}</Col>\r\n                </Row>}\r\n                {cookies.get('pu%5Fdiscount') && <Row className='summeryTxt'>\r\n                    <Col xs={8}>My Savings</Col>\r\n                    <Col xs={4} style={{ textAlign: 'right', color: 'red' }}>{`$${parseFloat(cookies.get('pu%5Fdiscount')).toFixed(2)}`}</Col>\r\n                </Row>}\r\n                <Row className='summeryTxt'>\r\n                    <Col xs={8}>Tax <p style={{ fontSize: 10 }}>(only for the state of GA)</p></Col>\r\n                    <Col xs={4} style={{ textAlign: 'right' }}>${georgiaTax.toFixed(2)}</Col>\r\n                </Row>\r\n\r\n                <hr />\r\n\r\n                <Row className='grandTotal'>\r\n                    <Col style={{ flex: 0.9, fontWeight: 'bold' }}>GRAND TOTAL</Col>\r\n                    <Col style={{ textAlign: 'right', fontWeight: 'bold' }}>{`$${grandTotal.toFixed(2)}`}</Col>\r\n                </Row>\r\n\r\n            </div>\r\n\r\n            <div className='seals mt-3'>\r\n                <p style={{ fontWeight: 500 }}>Pulse Uniform is verified by:</p>\r\n                <Row>\r\n                    <Col xs={3}>\r\n                        <img src=\"https://cdn.pulseuniform.com/checkout/images/paypal-new-seal.png\" />\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        <img src=\"https://cdn.pulseuniform.com/checkout/images/comodo-new-seal.png\" />\r\n                    </Col>\r\n                    <Col xs={5}>\r\n                        <img alt=\"\" src=\"https://cdn.pulseuniform.com/checkout/images/bbb-new-seal.png\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderSummaryPart;\r\n\r\n\r\n\r\n// hashcode\r\n// s_fullname\r\n// s_address1\r\n// s_address2\r\n// s_city\r\n// s_state\r\n// s_zip\r\n// s_phone\r\n// s_ext1\r\n// \"\"\r\n// \"\"\r\n// s_country\r\n// \"\"\r\n// s_fax,\r\n//     b_fullname\r\n// b_address1\r\n// b_address2\r\n// b_city\r\n// b_state\r\n// b_zip\r\n// b_phone\r\n// b_ext1\r\n// \"\"\r\n// \"\"\r\n// b_country\r\n// \"\"\r\n// b_fax\r\n// \"\"\r\n// \"\"\r\n// \"\"\r\n// \"\"\r\n// \"\"\r\n// \"\"\r\n// orderamount\r\n// shippingprice\r\n// tax\r\n// shippingtypename,\r\n//     discount\r\n// Convert.ToString(item.VENDORNAME)\r\n// i.ToString()\r\n// Convert.ToString(item.VENDORSTYLECODE)\r\n// Convert.ToString(item.STYLECODE)\r\n// Convert.ToString(item.STYLENAME)\r\n// colorcode\r\n// colorname\r\n// Convert.ToString(item.SIZE)\r\n// Convert.ToString(item.QTY)\r\n// Convert.ToString(item.COST)\r\n// Convert.ToString(item.PRICE)\r\n// Convert.ToString(item.CATEGORYNAME),\r\n//     Convert.ToString(item.PRICE)\r\n// customerid\r\n// fullname\r\n// customerpassword\r\n// customerlogin\r\n// customeremail,\r\n//     customercardid\r\n// card\r\n// cardno.ToString().Replace(\" \", \"\")\r\n// cvc\r\n// month\r\n// expiry\r\n// billingid\r\n// Convert.ToString(item.CATEGORYTYPE)\r\n// rewardspoint\r\n// isclearance\r\n// Convert.ToString(item.RETAILPRICE),\r\n//     Convert.ToString(item.SHOULDER)\r\n// Convert.ToString(item.CHEST)\r\n// Convert.ToString(item.WAIST)\r\n// Convert.ToString(item.CUSTOMSLEEVE)\r\n// Convert.ToString(item.HIP)\r\n// Convert.ToString(item.LENGTH)\r\n// Convert.ToString(item.FLY)\r\n// Convert.ToString(item.CALF)\r\n// Convert.ToString(item.INSEAMCUSTOM)\r\n// Convert.ToString(item.CENTERBACKLENGTH)\r\n// Convert.ToString(item.FABRIC)\r\n// Convert.ToString(item.OPTIONDESCRIPTION1),\r\n//     Convert.ToString(item.OPTIONPRICE1)\r\n// Convert.ToString(item.OPTIONDESCRIPTION2)\r\n// Convert.ToString(item.OPTIONPRICE2)\r\n// Convert.ToString(item.SIZEPRICE)\r\n\r\n// Convert.ToString(item.line1)\r\n// Convert.ToString(item.embfontname1)\r\n// Convert.ToString(item.embcolorname1)\r\n// Convert.ToString(item.emblocation1)\r\n\r\n// Convert.ToString(item.line2)\r\n// Convert.ToString(item.embfontname2)\r\n// Convert.ToString(item.embcolorname2)\r\n// Convert.ToString(item.emblocation2)\r\n\r\n// Convert.ToString(item.line3)\r\n// Convert.ToString(item.embfontname3)\r\n// Convert.ToString(item.embcolorname3)\r\n// Convert.ToString(item.emblocation3)\r\n\r\n// Convert.ToString(item.line4)\r\n// Convert.ToString(item.embfontname4)\r\n// Convert.ToString(item.embcolorname4)\r\n// Convert.ToString(item.emblocation4)\r\n\r\n// Convert.ToString(item.line5)\r\n// Convert.ToString(item.embfontname5)\r\n// Convert.ToString(item.embcolorname5)\r\n// Convert.ToString(item.emblocation5)\r\n\r\n// Convert.ToString(item.EmbPrice)\r\n// Convert.ToString(item.EmbPrice2)\r\n// Convert.ToString(item.EmbPrice3)\r\n// Convert.ToString(item.EmbPrice4)\r\n// Convert.ToString(item.EmbPrice5)\r\n\r\n// Convert.ToString(item.EmbInst)\r\n// Convert.ToString(item.logostylename)\r\n// Convert.ToString(item.threadcolorname)\r\n// Convert.ToString(item.locationname)\r\n// Convert.ToString(item.LogoInst)\r\n\r\n// Convert.ToString(item.LogoPrice)\r\n\r\n// Convert.ToString(item.logostylename2)\r\n// Convert.ToString(item.threadcolorname2)\r\n// Convert.ToString(item.locationname2)\r\n\r\n// Convert.ToString(item.LogoPrice2)\r\n// Convert.ToString(item.ISEMB)\r\n\r\n// Convert.ToString(item.INSEAMNAME)\r\n// Convert.ToString(item.INSEAMPRICE)\r\n\r\n\r\n","E:\\Projects\\checkout\\src\\components\\PaymentMethodPart.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"E:\\Projects\\checkout\\src\\App.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"E:\\Projects\\checkout\\src\\components\\ShippingAddressPart.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import './style.css';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  Alert\r\n} from 'react-bootstrap'\r\nimport React, {\r\n  lazy,\r\n  Suspense,\r\n  useEffect,\r\n  useState,\r\n  Component,\r\n  useRef\r\n}\r\n  from 'react'\r\nimport InputMask from 'react-input-mask';\r\nimport { getUSStates, getCanadaStates, getCountries } from '../DataAction/Checkout';\r\nimport Cookies from 'universal-cookie';\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrashAlt, } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction ShippingAddressPart(props) {\r\n  const { isGuest, addresses, onAddressChange, onAddressEditComplete, countries, canadaStates, usStates, selectedAddress, onAddressDelete } = props\r\n  let innerRef = useRef();\r\n\r\n  const [state, setState] = useState({\r\n    validated: false,\r\n    addOrEditAddress: false,\r\n    editSelectedAddress: { STREETADDRESS2: '', COUNTRY: \"USA\" },\r\n    isDefaultAddress: false\r\n  });\r\n  const { addOrEditAddress, editSelectedAddress, validated, isDefaultAddress } = state\r\n\r\n  // useEffect(() => {\r\n  //   Promise.all([getUSStates(), getCanadaStates(), getCountries()]).then(data => {\r\n  //     console.log('countries', data)\r\n  //     setState({ ...state, countries: [...data[2], {CountryName: 'USA'}, {CountryName: 'Canada'}], usStates: data[0], canadaStates: data[1] })\r\n  //   })\r\n  // }, []);\r\n\r\n  const onAddressEditOrCreateComplete = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false || editSelectedAddress.COUNTRY === '' || editSelectedAddress.STATE === '') {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setState({ ...state, validated: true })\r\n    } else {\r\n      event.preventDefault()\r\n      const formData = new FormData(event.target)\r\n      const formDataObj = Object.fromEntries(formData.entries())\r\n      // onAddressEditComplete\r\n      document.getElementById(\"addNewAddress\").reset();\r\n      onAddressEditComplete(editSelectedAddress, isDefaultAddress)\r\n      setState({ ...state, validated: false, addOrEditAddress: false });\r\n    }\r\n  };\r\n\r\n  const onAddressEdit = (value, index) => {\r\n    value = Object.keys(value).length > 0 ? { ...value, FIRSTNAME: value.FULLNAME.split('_')[0], LASTNAME: value.FULLNAME.split('_')[1], CUSTOMERID: cookies.get('PU%5FTransid') } : { ...value, SHIPPINGID: 0, CUSTOMERID: cookies.get('PU%5FTransid'), STREETADDRESS2: '', PHONE1: '', COUNTRY: \"USA\" }\r\n    setTimeout(() => {\r\n      innerRef.current.focus();\r\n      innerRef.current.scrollIntoView();\r\n      // window.location ='https://www.pulseuniform.com/payout/#addNewAddress '\r\n      window.location = 'http://localhost:3000/#addNewAddress '\r\n    }, 2)\r\n\r\n    setState({ ...state, addOrEditAddress: true, editSelectedAddress: { ...value, index }, isDefaultAddress: value.USETHIS === 1 ? true : false })\r\n  }\r\n\r\n  const onFormValueChange = (value, objectName) => {\r\n    let temp = { ...editSelectedAddress }\r\n    temp[objectName] = value\r\n    setState({ ...state, editSelectedAddress: temp })\r\n  }\r\n\r\n  const onCountryOrStateChange = (value, name) => {\r\n    setState({ ...state, editSelectedAddress: { ...editSelectedAddress, [name]: value, STATE: name === 'COUNTRY' ? '' : value } })\r\n  }\r\n\r\n  return (\r\n    <Row className='informationContainer' style={{ marginTop: 20 }}>\r\n      <div className='textContainer row'>\r\n        <Col xs={8} md={8} lg={8} >\r\n          <h5> SHIPPING ADDRESS </h5>\r\n        </Col>\r\n        {(!isGuest && addresses.length > 0) && <Col xs={4} md={4} lg={4} className=' pl-0 pl-sm-3'>\r\n          <a style={{ color: 'rgba(9, 22, 87)', cursor: 'pointer', fontWeight: '600', float: 'right', border: 'solid 2px', padding: '4px 8px', fontSize: 15, }} onClick={(e) => { onAddressEdit({}, addresses.length); }} > Add New </a>\r\n        </Col>}\r\n      </div>\r\n      {addresses.length > 0 && <Row className='ml-0 mr-0' style={{ pointerEvents: addOrEditAddress ? 'none' : null, opacity: addOrEditAddress ? 0.5 : null, marginTop: 10, width: '100%', }}>\r\n        {addresses.map((address, i) => (\r\n          <>\r\n            <Col xs={6} md={4} lg={3}>\r\n              {console.log('address', address.FULLNAME)}\r\n              <Row>\r\n                <Col>\r\n                  < input id={`multiAddress${i + 1}`} checked={selectedAddress.SHIPPINGID === address.SHIPPINGID} onChange={() => { onAddressChange(address) }} style={{ marginLeft: 30, }} type=\"radio\" name=\"gender\" className='radioCustm' />\r\n                  <label for={`multiAddress${i + 1}`} style={{ margin: '-24px 0 0 0', cursor: 'pointer', }} >\r\n\r\n                    <div className='AddressIcon'>\r\n                      {address.FULLNAME.split('_')[0][0].toUpperCase()}{address.FULLNAME.split('_')[1] && address.FULLNAME.split('_')[1][0].toUpperCase()}\r\n                      <a style={{ color: 'blue', cursor: 'pointer', }} onClick={(e) => { onAddressEdit(address, i) }} className='addresEdit' > <FontAwesomeIcon icon={faEdit} /></a>\r\n                      {addresses.length > 1 &&\r\n                        < a style={{ color: 'blue', cursor: 'pointer' }} onClick={(e) => { onAddressDelete(address, i) }} className='addresDelete'> <FontAwesomeIcon icon={faTrashAlt} /> </a>\r\n                      }\r\n                    </div>\r\n                    < p style={{ textAlign: 'center', fontWeight: '500', fontSize: 15, }}> {address.FULLNAME.split('_')[0]} {address.FULLNAME.split('_')[1]}, {address.STREETADDRESS1}, {address.STATE}, {address.CITY}, {address.COUNTRY} </p>\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </>\r\n        ))}\r\n      </Row>}\r\n\r\n      {(addOrEditAddress || Object.keys(selectedAddress).length <= 0) && <Form className='emailFormContainer' style={{ marginTop: 0 }} noValidate validated={state.validated} onSubmit={onAddressEditOrCreateComplete} id='addNewAddress'>\r\n        <Row className='buttonsContainer mt-0' >\r\n          <Form.Group controlId=\"formBasicEmail\" as={Col} xs=\"12\">\r\n            {/* <Form.Control required className='inputFieldContainer' type=\"text\" placeholder=\"Full Name\" name='FULLNAME' onChange={(e) => {onFormValueChange(e.target.value, 'FULLNAME')}} value={editSelectedAddress.FULLNAME && `${editSelectedAddress.FULLNAME.split(\"_\")[0]} ${editSelectedAddress.FULLNAME.split(\"_\")[1]}`} />\r\n            <Form.Control.Feedback type=\"invalid\">Name is required</Form.Control.Feedback> */}\r\n            <Row>\r\n              <Col xs={12} sm={6} md={6}>\r\n                <Form.Control ref={innerRef} required style={{ marginTop: 10 }} className='inputFieldContainer' type=\"text\" placeholder=\"First Name\" name='FIRSTNAME' onChange={(e) => { onFormValueChange(e.target.value, 'FIRSTNAME') }} value={editSelectedAddress.FIRSTNAME && editSelectedAddress.FIRSTNAME} />\r\n                <Form.Control.Feedback type=\"invalid\">First Name is required</Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs={12} sm={6} md={6}>\r\n                <Form.Control required style={{ marginTop: 10 }} className='inputFieldContainer' type=\"text\" placeholder=\"Last Name\" name='LASTNAME' onChange={(e) => { onFormValueChange(e.target.value, 'LASTNAME') }} value={editSelectedAddress.LASTNAME && editSelectedAddress.LASTNAME} />\r\n                <Form.Control.Feedback type=\"invalid\"> Last Name is required </Form.Control.Feedback>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12} sm={8} md={8}>\r\n                <Form.Control required style={{ marginTop: 10 }} className='inputFieldContainer' type=\"text\" placeholder=\"Shipping Address\" name='STREETADDRESS1' onChange={(e) => { onFormValueChange(e.target.value, 'STREETADDRESS1') }} value={editSelectedAddress.STREETADDRESS1 && editSelectedAddress.STREETADDRESS1} />\r\n                <Form.Control.Feedback type=\"invalid\">Address is required</Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs={12} sm={4} md={4}>\r\n                <Form.Control style={{ marginTop: 10 }} className='inputFieldContainer' type=\"text\" placeholder=\"Apt/Unit (optional)\" name='STREETADDRESS2' onChange={(e) => { onFormValueChange(e.target.value, 'STREETADDRESS2') }} value={editSelectedAddress.STREETADDRESS2 && editSelectedAddress.STREETADDRESS2} />\r\n                <Form.Control.Feedback type=\"invalid\"> Apt / Unit is required </Form.Control.Feedback>\r\n              </Col>\r\n            </Row>\r\n            {/* <Form.Control required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' type=\"text\" placeholder=\"Town/City\" name='city' value={editSelectedAddress.CITY && editSelectedAddress.CITY} />\r\n            <Form.Control.Feedback type=\"invalid\">Town/City is required </Form.Control.Feedback> */}\r\n\r\n            <Row>\r\n\r\n\r\n              <Col>\r\n\r\n                <Form.Control required style={{ marginTop: 10 }} className='inputFieldContainer' type=\"text\" placeholder=\"Town/City\" name='CITY' onChange={(e) => { onFormValueChange(e.target.value, 'CITY') }} value={editSelectedAddress.CITY && editSelectedAddress.CITY} />\r\n                <Form.Control.Feedback type=\"invalid\">Town/City is required </Form.Control.Feedback>\r\n\r\n              </Col>\r\n              <Col>\r\n                {(editSelectedAddress.COUNTRY === 'USA' || editSelectedAddress.COUNTRY === 'Canada') ?\r\n                  <>\r\n                    <Select\r\n                      // value={selectedOption}\r\n                      value={editSelectedAddress.STATE && { value: editSelectedAddress.STATE, label: editSelectedAddress.STATE }}\r\n                      placeholder='Select State'\r\n                      style={{ border: 0, }}\r\n                      onChange={(selectedOption) => { onCountryOrStateChange(selectedOption.value, 'STATE') }}\r\n                      options={(editSelectedAddress.COUNTRY === 'USA' ? usStates : canadaStates).map(country => {\r\n                        return { value: country.STATENAME, label: country.STATENAME }\r\n                      })}\r\n                    />\r\n                    {((editSelectedAddress.STATE == undefined || editSelectedAddress.STATE === '') && validated) && <p style={{ fontSize: 13, marginTop: 5, color: '#dc3545' }}>State is required</p>}\r\n\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Form.Control required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' type=\"text\" placeholder=\"State\" name='STATE' onChange={(e) => { onFormValueChange(e.target.value, 'STATE') }} value={editSelectedAddress.STATE && editSelectedAddress.STATE} />\r\n                    <Form.Control.Feedback type=\"invalid\">State is required</Form.Control.Feedback>\r\n                  </>\r\n                }\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n\r\n              <Col>\r\n                <Form.Control required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' type=\"text\" placeholder=\"Zip Code\" name='ZIP' onChange={(e) => { onFormValueChange(e.target.value, 'ZIP') }} value={editSelectedAddress.ZIP && editSelectedAddress.ZIP} />\r\n                <Form.Control.Feedback type=\"invalid\">Zip Code is required</Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs={12} md={6}>\r\n                <Select\r\n                  // value={selectedOption}\r\n                  value={{ value: editSelectedAddress.COUNTRY, label: editSelectedAddress.COUNTRY }}\r\n                  placeholder='Select Country'\r\n                  style={{ border: 0, }}\r\n                  onChange={(selectedOption) => { onCountryOrStateChange(selectedOption.value, 'COUNTRY') }}\r\n                  options={countries.map(country => {\r\n                    return { value: country.CountryName, label: country.CountryName }\r\n                  })}\r\n                />\r\n                {((editSelectedAddress.COUNTRY == undefined || editSelectedAddress.COUNTRY === '') && validated) && <p style={{ fontSize: 13, marginTop: 5, color: '#dc3545' }}>Country is required</p>}\r\n              </Col>\r\n            </Row>\r\n            <InputMask mask=\"+9 (999) 999-9999\" style={{color: 'black'}} maskChar=\"\"  onChange={(e) => { onFormValueChange(e.target.value, 'PHONE1') }} value={editSelectedAddress.PHONE1 && editSelectedAddress.PHONE1}>\r\n              {(props) => <Form.Control {...props}  required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' name='PHONE1' placeholder=\"Phone Number\"  />}\r\n            </InputMask>\r\n            <Form.Control.Feedback type=\"invalid\">Phone Number is required</Form.Control.Feedback>\r\n            {/* < InputMask style={{}} mask=\"(999) 999-9999\" maskChar=\"\" onChange={(val) => { console.log(val) }} >\r\n              {(props) => <Form.Control {...props} required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' placeholder=\"Phone Number\" name='phoneNumber' />}\r\n            </InputMask> */}\r\n            {/* <Form.Control.Feedback type=\"invalid\">Phone Number is required</Form.Control.Feedback> */}\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className='buttonsContainer'>\r\n          <Col className='flexEndButton'>\r\n            {addresses.length > 0 && <Form.Check\r\n              style={{ marginRight: 20, alignSelf: 'flex-end' }}\r\n              type={'checkbox'}\r\n              id={`default`}\r\n              checked={isDefaultAddress}\r\n              onClick={() => { setState({ ...state, isDefaultAddress: !isDefaultAddress }) }}\r\n              label={`Make my deafult shipping address `}\r\n            />}\r\n            < Button type=\"submit\" className='fillButton'>Next</Button>\r\n            {addresses.length > 0 && < Button onClick={() => { setState({ ...state, addOrEditAddress: false, editSelectedAddress: {}, validated: false }); }} className='fillButton' style={{ marginLeft: 10 }}> Cancel </Button>}\r\n          </Col>\r\n          {/* <Col className='flexEndButton'>\r\n            < Button type=\"submit\" className='fillButton'  > Save </Button>\r\n          </Col> */}\r\n        </Row>\r\n      </Form>}\r\n      {/* {isPayment && <Row className='buttonsContainer'>\r\n        <Col className='flexEndButton'>\r\n          < Button onClick={props.onShippingAddressClick} className='fillButton'> Edit </Button>\r\n        </Col>\r\n      </Row>}  */}\r\n      <>\r\n\r\n      </>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ShippingAddressPart;\r\n\r\n\r\n// < InputMask style={{}} mask=\"(999) 999-9999\" maskChar=\"\" onChange={(val) => { console.log(val) }} >\r\n//               {(props) => <Form.Control {...props} required style={{ marginTop: 10, paddingRight: 5 }} className='inputFieldContainer' placeholder=\"Phone Number\" name='phoneNumber' />}\r\n//             </InputMask>","E:\\Projects\\checkout\\src\\components\\ShippingMethodPart.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import './style.css';\r\nimport { Container, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\r\n\r\nfunction ShippingMethodPart(props) {\r\n  const { isGuest, isLogin, selectedAddress, shippingDays, onShipMethodChange, selectedShippingMethod} = props\r\n  const [state, setState] = useState({\r\n    validated: false,\r\n  });\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   let tempSelectedShip = selectedAddress.COUNTRY=='USA'?shippingDays[0]:selectedAddress.COUNTRY=='Canada'?shippingDays[5]:shippingDays[6]\r\n  //   setState({...state, selectedShippingMethod: {...tempSelectedShip}})\r\n  // }, [selectedAddress]);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    else {\r\n      event.preventDefault()\r\n      const formData = new FormData(event.target)\r\n      const formDataObj = Object.fromEntries(formData.entries())\r\n      console.log(formDataObj)\r\n      props.onLoginClick(formDataObj)\r\n    }\r\n    setState({ ...state, validated: true });\r\n  };\r\n\r\n  const onShippingMethodChange = (shippingMethod) => {\r\n    onShipMethodChange(shippingMethod)\r\n    setState({...state, selectedShippingMethod: shippingMethod})\r\n  }\r\n\r\n  return (\r\n    <Row className='informationContainer' style={{ marginTop: 20 }}>\r\n      <div className='textContainer'>\r\n      <Col xs={12} >\r\n        <h5 >SHIPPING METHOD</h5>\r\n        </Col>\r\n      </div>\r\n      <Col xs={12} >\r\n      {\r\n        (selectedAddress.COUNTRY === 'USA' || Object.keys(selectedAddress).length <= 0) ?\r\n          <Row className='textContainer'>\r\n            \r\n              {shippingDays.map((shippingDay, i) => (\r\n                i < 4 &&\r\n                <button onClick={() => {onShippingMethodChange(shippingDay)}} className={shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodContainerFill':'shippingMethodContainerBorder'}>\r\n                  <div className='methodLeft'>\r\n                  <p className={`${shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodFontWhite':'shippingMethodFontBlack'}`} style={{ fontSize: 14, fontWeight:500, }} >BETWEEN</p>\r\n                  <p className={`dIB ${shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodFontWhite':'shippingMethodFontBlack'}`} style={{ fontSize: 16, fontWeight:500, }}>{shippingDay.DateFrom}</p>\r\n                  <p className={`dIB ${shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodFontWhite':'shippingMethodFontBlack'}`} style={{ fontSize: 12, fontWeight:500, }}>and</p>\r\n                  <p className={`dIB horizentlBorder ${shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodFontWhite':'shippingMethodFontBlack '}`} style={{ fontSize: 16, fontWeight:500, borderBottomStyle: 'solid', borderBottomWidth: 1, paddingBottom:'8px', width:'70px', clear:'both', margin:'auto', marginBottom:'8px', }}>{shippingDay.DateTo}</p>\r\n                  </div>\r\n\r\n                  <div className='methodRight'>\r\n                  <p className={shippingDay.ShippingTypeID==selectedShippingMethod.ShippingTypeID?'shippingMethodFontWhite':'shippingMethodFontBlack'} style={{ fontSize: 19, fontWeight:500,}}>{shippingDay.PriceAmount === 0 ? 'Free': `$${shippingDay.PriceAmount}`}</p>\r\n                  <p className={shippingDay.ShippingTypeID == selectedShippingMethod.ShippingTypeID ? 'shippingMethodFontWhite' : 'shippingMethodFontBlack'} style={{ fontSize: 15, fontWeight:500, }}>{shippingDay.webname}</p>\r\n                  <p className={shippingDay.ShippingTypeID == selectedShippingMethod.ShippingTypeID ? 'shippingMethodFontWhite' : 'shippingMethodFontBlack'} style={{ fontSize: 12 }}>{shippingDay.webdescription}</p>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n              \r\n          </Row>\r\n          :\r\n          selectedAddress.COUNTRY === 'Canada' ?\r\n            <Row className='textContainer'>\r\n              <button className='shippingMethodContainerFill'>\r\n              <div className='methodLeft'>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 14, fontWeight:500, }} >BETWEEN</p>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 16, fontWeight:500, }}>{shippingDays[4].DateFrom}</p>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12, fontWeight:500, }}>and</p>\r\n                <p className=\"shippingMethodFontWhite horizentlBorder\" style={{ fontSize: 16, fontWeight:500, borderBottomStyle: 'solid', borderBottomWidth: 1, paddingBottom:'8px', width:'70px', clear:'both', margin:'auto', marginBottom:'8px', }}>{shippingDays[4].DateTo}</p>\r\n                </div>\r\n\r\n                <div className='methodRight'>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 19, fontWeight:500,}}>{shippingDays[4].PriceAmount === 0 ? 'Free': `$${shippingDays[4].PriceAmount}`}</p>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 15, fontWeight:500, }}>{shippingDays[4].webname}</p>\r\n                <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12 }}>{shippingDays[4].webdescription}</p>\r\n                </div>\r\n              </button>\r\n            </Row>\r\n            :\r\n            Object.keys(selectedAddress).length > 0 ?\r\n              <Row className='textContainer'>\r\n                <button className='shippingMethodContainerFill'>\r\n                <div className='methodLeft'>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 14, fontWeight:500, }} >BETWEEN</p>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 16, fontWeight:500, }}>{shippingDays[5].DateFrom}</p>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12, fontWeight:500, }}>and</p>\r\n                  <p className=\"shippingMethodFontWhite horizentlBorder\" style={{ fontSize: 16, fontWeight:500, borderBottomStyle: 'solid', borderBottomWidth: 1, paddingBottom:'8px', width:'70px', clear:'both', margin:'auto', marginBottom:'8px', }}>{shippingDays[5].DateTo}</p>\r\n                  </div>\r\n                  <div className='methodRight'>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 19, fontWeight:500,}}>{shippingDays[5].PriceAmount === 0 ? 'Free': `$${shippingDays[5].PriceAmount}`}</p>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 15, fontWeight:500, }}>{shippingDays[5].webname}</p>\r\n                  <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12 }}>{shippingDays[5].webdescription}</p>\r\n                  </div>\r\n\r\n                </button>\r\n              </Row>\r\n              :\r\n              <Row>\r\n\r\n              </Row>\r\n      }\r\n\r\n</Col>\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ShippingMethodPart;\r\n\r\n// <button className='shippingMethodContainerFill'>\r\n// <p className=\"shippingMethodFontWhite\">BETWEEN</p>\r\n// <p className=\"shippingMethodFontWhite\">{shippingDay.DateFrom}</p>\r\n// <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12 }}>and</p>\r\n// <p className=\"shippingMethodFontWhite\" style={{ borderBottomStyle: 'solid', borderBottomWidth: 1 }}>{shippingDay.DateTo}</p>\r\n// <p className=\"shippingMethodFontWhite\" style={{ fontSize: 14 }}>${shippingDay.ActualRate}</p>\r\n// <p className=\"shippingMethodFontWhite\" style={{ fontSize: 14 }}>{shippingDay.webname}</p>\r\n// <p className=\"shippingMethodFontWhite\" style={{ fontSize: 12 }}>{shippingDay.webdescription}</p>\r\n// </button>\r\n// <button className='shippingMethodContainerBorder'>\r\n//                 <p className=\"shippingMethodFontBlack\" >FRIDAY</p>\r\n//                 <p className=\"shippingMethodFontBlack\" style={{ fontSize: 29 }}>4</p>\r\n//                 {/* <p style={{  fontSize: 12 }}>and</p> */}\r\n//               <p className=\"shippingMethodFontBlack\" style={{ borderBottomStyle: 'solid', borderBottomWidth: 1 }}>FEB</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>$4.90</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>BOOKING</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 12 }}>with text</p>\r\n//             </button>\r\n//             <button className='shippingMethodContainerBorder'>\r\n//               <p className=\"shippingMethodFontBlack\" >THURSDAY</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 29 }}>10</p>\r\n//               {/* <p style={{  fontSize: 12 }}>and</p> */}\r\n//               <p className=\"shippingMethodFontBlack\" style={{ borderBottomStyle: 'solid', borderBottomWidth: 1 }}>JAN</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>$4.90</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>BOOKING</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 12 }}>with text</p>\r\n//             </button>\r\n//             <button className='shippingMethodContainerBorder'>\r\n//               <p className=\"shippingMethodFontBlack\" >FRIDAY</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 29 }}>4</p>\r\n//               {/* <p style={{  fontSize: 12 }}>and</p> */}\r\n//               <p className=\"shippingMethodFontBlack\" style={{ borderBottomStyle: 'solid', borderBottomWidth: 1 }}>FEB</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>$4.90</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 14 }}>BOOKING</p>\r\n//               <p className=\"shippingMethodFontBlack\" style={{ fontSize: 12 }}>with text</p>\r\n//             </button>","E:\\Projects\\checkout\\src\\components\\LoginPart.js",["135","136","137","138","139","140"],"import './style.css';\r\nimport {Container, Button, Row, Col, Form} from 'react-bootstrap'\r\nimport React, { lazy, Suspense, useEffect, useState, useRef} from 'react'\r\n\r\nfunction LoginPart(props) {\r\n    const { isGuest, isLogin, isLoading, loginError, onForgetPassword } = props\r\n    const [state, setState] = useState({\r\n        validated: false,\r\n    });\r\n    const { isForgetPassword} = state\r\n    let innerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        console.log('aaaaaaaaaaaa')\r\n        innerRef.current&& innerRef.current.focus();\r\n  }, [isLogin, isGuest]);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            event.preventDefault()\r\n            const formData = new FormData(event.target)\r\n            const formDataObj = Object.fromEntries(formData.entries())\r\n            props.onLoginClick(formDataObj)\r\n        }\r\n        setState({ ...state, validated: true });\r\n    };\r\n\r\n    //GUEST OR USER OPTION\r\n    return (\r\n        <Row className='informationContainer'>\r\n            {/* buttons part  */}\r\n            <Row xs={12} className='buttonsContainer'>\r\n                <Col xs={12} md={12} lg={6} className='singleButtonContainer mb-2 mb-lg-0 '>\r\n                    <Button\r\n                        disabled={isLogin}\r\n                        onClick={() => {props.onGuestButtonClick(false)}}\r\n                        className={isGuest ? 'borderButton' : 'fillButton'}\r\n                        variant={isGuest ? \"outline-primary\" : null} block\r\n                    >\r\n                        Already have an account?\r\n                    </Button>\r\n                </Col>\r\n                <Col xs={12} md={12} lg={6} className='singleButtonContainer'>\r\n                    <Button disabled={isLogin}\r\n                        onClick={() => { props.onGuestButtonClick(true) }}\r\n                        className={!isGuest ? 'borderButton' : 'fillButton'}\r\n                        variant={!isGuest ? \"outline-primary\" : null}\r\n                        block\r\n                    >\r\n                        Guest Checkout\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* LOGIN FORM  */}\r\n            <Form className='emailFormContainer' noValidate validated={state.validated} onSubmit={handleSubmit}>\r\n                {!isLogin&&\r\n                <>\r\n                <Row className='buttonsContainer'>\r\n                    <Form.Group controlId=\"formBasicEmail\" as={Col} xs=\"12\" >\r\n                        {/* <Form.Label>Email address</Form.Label> */}\r\n                        <Form.Control ref={innerRef} style={{}} required disabled={isLogin} className='inputFieldContainer' type=\"email\" placeholder=\"Enter email\" name='email'/>\r\n                        <Form.Control.Feedback type=\"invalid\">Please enter correct email address</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className='buttonsContainer'>\r\n                    {!isGuest && <Form.Group controlId=\"formBasicPassowrd\" as={Col} xs=\"12\" >\r\n                        {/* <Form.Label>Email address</Form.Label> */}\r\n                        <Form.Control required disabled={isLogin} className='inputFieldContainer' type=\"password\" placeholder=\"Enter Password\" name='password' />\r\n                        <Form.Control.Feedback type=\"invalid\">Password is required</Form.Control.Feedback>\r\n                    </Form.Group>}\r\n                </Row>\r\n                </>}\r\n                {loginError && <Col >\r\n                    <p style={{ color: '#db3740' }}>Invalid username or password</p>\r\n                </Col>}\r\n                {/* message part  */}\r\n                {!isLogin && <Row className='buttonsContainer'>\r\n                    {/* {isGuest && <Col>\r\n                        <p>Already have an account? <span><a target='_blank' href={`#`} style={{ color: 'red' }}>Sign In</a> </span></p>\r\n                    </Col>} */}\r\n                    {isGuest?<Col xs={12} sm={6}>\r\n                            <p>Already have an account? <a onClick={() => {props.onGuestButtonClick(false)}} style={{color: 'red', cursor: 'pointer'}}> Signin</a></p>\r\n                    </Col>\r\n                   :\r\n                   <Col xs={12} sm={6}>\r\n                            <a onClick={() => {onForgetPassword()}} style={{color: 'red', cursor: 'pointer'}}> Forgot Password?</a>\r\n                    </Col>\r\n                    }\r\n                    <Col xs={12} sm={6} className='flexEndButton ml-auto'>\r\n                        <Button disabled={isLoading} type=\"submit\" className='fillButton redbtn' style={{backgroundColor: '#db3740 !important', borderColor:'#db3740', height:40,}}>{isGuest ? 'Continue as Guest' : 'Login'}</Button>\r\n                    </Col>\r\n                </Row>}\r\n            </Form>\r\n\r\n            {\r\n            // isForgetPassword &&\r\n            //     <Row  className='buttonsContainer'>\r\n            //         <Col xs={10} md={10} lg={10}>\r\n            //             {/* <Form.Label>Email address</Form.Label> */}\r\n            //             <Form.Control style={{}} className='inputFieldContainer' type=\"email\" placeholder=\"Enter email\" name='email' />\r\n            //         </Col>\r\n            //         <Col xs={2} md={2} lg={2} >\r\n            //             {/* <Form.Label>Email address</Form.Label> */}\r\n            //             <Button\r\n            //                 onClick={() => { console.log('cliked') }}\r\n            //                 className={'fillButton'}\r\n            //                 block\r\n            //             >Submit</Button>\r\n            //         </Col>\r\n            //     </Row>\r\n\r\n            }\r\n            {/* {isLogin && <Row className='buttonsContainer'>\r\n                <Col className='flexEndButton'>\r\n                    <Button onClick={props.onLoginClick} className='fillButton'>Edit</Button>\r\n\r\n                </Col>\r\n            </Row>} */}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LoginPart;\r\n\r\n\r\n\r\n\r\n// ","E:\\Projects\\checkout\\src\\GeneralFunctions\\Constants.js",[],["141","142"],"E:\\Projects\\checkout\\src\\DataAction\\Checkout.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":2,"column":21,"nodeType":"151","messageId":"152","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"154","line":2,"column":39,"nodeType":"151","messageId":"152","endLine":2,"endColumn":43},{"ruleId":"149","severity":1,"message":"155","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":3,"column":23,"nodeType":"151","messageId":"152","endLine":3,"endColumn":31},{"ruleId":"149","severity":1,"message":"157","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":24},{"ruleId":"149","severity":1,"message":"158","line":10,"column":13,"nodeType":"151","messageId":"152","endLine":10,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":10,"column":55,"nodeType":"151","messageId":"152","endLine":10,"endColumn":59},{"ruleId":"149","severity":1,"message":"160","line":53,"column":11,"nodeType":"151","messageId":"152","endLine":53,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":81,"column":25,"nodeType":"163","endLine":81,"endColumn":218},{"ruleId":"164","severity":1,"message":"165","line":91,"column":29,"nodeType":"163","endLine":91,"endColumn":212},{"ruleId":"161","severity":1,"message":"162","line":102,"column":112,"nodeType":"163","endLine":102,"endColumn":363},{"ruleId":"166","severity":1,"message":"167","line":136,"column":100,"nodeType":"168","messageId":"169","endLine":136,"endColumn":102},{"ruleId":"164","severity":1,"message":"165","line":160,"column":25,"nodeType":"163","endLine":160,"endColumn":103},{"ruleId":"164","severity":1,"message":"165","line":163,"column":25,"nodeType":"163","endLine":163,"endColumn":103},{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":19},{"ruleId":"149","severity":1,"message":"155","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":3,"column":23,"nodeType":"151","messageId":"152","endLine":3,"endColumn":31},{"ruleId":"149","severity":1,"message":"170","line":3,"column":54,"nodeType":"151","messageId":"152","endLine":3,"endColumn":60},{"ruleId":"149","severity":1,"message":"171","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"149","severity":1,"message":"172","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":16},{"ruleId":"149","severity":1,"message":"173","line":8,"column":10,"nodeType":"151","messageId":"152","endLine":8,"endColumn":22},{"ruleId":"149","severity":1,"message":"174","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":13},{"ruleId":"149","severity":1,"message":"175","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":14},{"ruleId":"149","severity":1,"message":"176","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":17},{"ruleId":"149","severity":1,"message":"177","line":16,"column":5,"nodeType":"151","messageId":"152","endLine":16,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":32,"column":13,"nodeType":"151","messageId":"152","endLine":32,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":58,"column":8,"nodeType":"180","endLine":58,"endColumn":25,"suggestions":"181"},{"ruleId":"149","severity":1,"message":"182","line":60,"column":11,"nodeType":"151","messageId":"152","endLine":60,"endColumn":21},{"ruleId":"149","severity":1,"message":"183","line":205,"column":11,"nodeType":"151","messageId":"152","endLine":205,"endColumn":22},{"ruleId":"149","severity":1,"message":"184","line":217,"column":11,"nodeType":"151","messageId":"152","endLine":217,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":439,"column":144,"nodeType":"187","endLine":439,"endColumn":170},{"ruleId":"166","severity":1,"message":"167","line":478,"column":67,"nodeType":"168","messageId":"169","endLine":478,"endColumn":69},{"ruleId":"166","severity":1,"message":"167","line":502,"column":73,"nodeType":"168","messageId":"169","endLine":502,"endColumn":75},{"ruleId":"185","severity":1,"message":"186","line":517,"column":145,"nodeType":"187","endLine":517,"endColumn":156},{"ruleId":"149","severity":1,"message":"188","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":12},{"ruleId":"149","severity":1,"message":"155","line":4,"column":17,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":4,"column":23,"nodeType":"151","messageId":"152","endLine":4,"endColumn":31},{"ruleId":"149","severity":1,"message":"189","line":10,"column":95,"nodeType":"151","messageId":"152","endLine":10,"endColumn":105},{"ruleId":"149","severity":1,"message":"190","line":18,"column":21,"nodeType":"151","messageId":"152","endLine":18,"endColumn":26},{"ruleId":"149","severity":1,"message":"191","line":18,"column":41,"nodeType":"151","messageId":"152","endLine":18,"endColumn":47},{"ruleId":"192","severity":1,"message":"193","line":90,"column":25,"nodeType":"194","messageId":"195","endLine":90,"endColumn":27},{"ruleId":"178","severity":1,"message":"196","line":142,"column":6,"nodeType":"180","endLine":142,"endColumn":8,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"193","line":159,"column":22,"nodeType":"194","messageId":"195","endLine":159,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":192,"column":27,"nodeType":"194","messageId":"195","endLine":192,"endColumn":29},{"ruleId":"149","severity":1,"message":"198","line":200,"column":25,"nodeType":"151","messageId":"152","endLine":200,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":418,"column":9,"nodeType":"163","endLine":418,"endColumn":91},{"ruleId":"164","severity":1,"message":"165","line":424,"column":11,"nodeType":"163","endLine":424,"endColumn":94},{"ruleId":"164","severity":1,"message":"165","line":496,"column":57,"nodeType":"163","endLine":496,"endColumn":144},{"ruleId":"149","severity":1,"message":"150","line":3,"column":3,"nodeType":"151","messageId":"152","endLine":3,"endColumn":12},{"ruleId":"149","severity":1,"message":"199","line":8,"column":3,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"200","line":9,"column":3,"nodeType":"151","messageId":"152","endLine":9,"endColumn":8},{"ruleId":"149","severity":1,"message":"155","line":12,"column":3,"nodeType":"151","messageId":"152","endLine":12,"endColumn":7},{"ruleId":"149","severity":1,"message":"156","line":13,"column":3,"nodeType":"151","messageId":"152","endLine":13,"endColumn":11},{"ruleId":"149","severity":1,"message":"201","line":14,"column":3,"nodeType":"151","messageId":"152","endLine":14,"endColumn":12},{"ruleId":"149","severity":1,"message":"202","line":16,"column":3,"nodeType":"151","messageId":"152","endLine":16,"endColumn":12},{"ruleId":"149","severity":1,"message":"203","line":21,"column":10,"nodeType":"151","messageId":"152","endLine":21,"endColumn":21},{"ruleId":"149","severity":1,"message":"204","line":21,"column":23,"nodeType":"151","messageId":"152","endLine":21,"endColumn":38},{"ruleId":"149","severity":1,"message":"205","line":21,"column":40,"nodeType":"151","messageId":"152","endLine":21,"endColumn":52},{"ruleId":"149","severity":1,"message":"206","line":58,"column":13,"nodeType":"151","messageId":"152","endLine":58,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":95,"column":11,"nodeType":"163","endLine":95,"endColumn":220},{"ruleId":"161","severity":1,"message":"162","line":110,"column":23,"nodeType":"163","endLine":110,"endColumn":143},{"ruleId":"161","severity":1,"message":"162","line":112,"column":25,"nodeType":"163","endLine":112,"endColumn":148},{"ruleId":"166","severity":1,"message":"167","line":174,"column":50,"nodeType":"168","messageId":"169","endLine":174,"endColumn":52},{"ruleId":"166","severity":1,"message":"167","line":203,"column":48,"nodeType":"168","messageId":"169","endLine":203,"endColumn":50},{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":2,"column":21,"nodeType":"151","messageId":"152","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"154","line":2,"column":39,"nodeType":"151","messageId":"152","endLine":2,"endColumn":43},{"ruleId":"149","severity":1,"message":"155","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":3,"column":23,"nodeType":"151","messageId":"152","endLine":3,"endColumn":31},{"ruleId":"149","severity":1,"message":"201","line":3,"column":33,"nodeType":"151","messageId":"152","endLine":3,"endColumn":42},{"ruleId":"149","severity":1,"message":"158","line":6,"column":11,"nodeType":"151","messageId":"152","endLine":6,"endColumn":18},{"ruleId":"149","severity":1,"message":"207","line":6,"column":20,"nodeType":"151","messageId":"152","endLine":6,"endColumn":27},{"ruleId":"149","severity":1,"message":"160","line":17,"column":9,"nodeType":"151","messageId":"152","endLine":17,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":52,"column":116,"nodeType":"168","messageId":"169","endLine":52,"endColumn":118},{"ruleId":"166","severity":1,"message":"167","line":54,"column":62,"nodeType":"168","messageId":"169","endLine":54,"endColumn":64},{"ruleId":"166","severity":1,"message":"167","line":55,"column":66,"nodeType":"168","messageId":"169","endLine":55,"endColumn":68},{"ruleId":"166","severity":1,"message":"167","line":56,"column":66,"nodeType":"168","messageId":"169","endLine":56,"endColumn":68},{"ruleId":"166","severity":1,"message":"167","line":57,"column":82,"nodeType":"168","messageId":"169","endLine":57,"endColumn":84},{"ruleId":"166","severity":1,"message":"167","line":61,"column":59,"nodeType":"168","messageId":"169","endLine":61,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":62,"column":60,"nodeType":"168","messageId":"169","endLine":62,"endColumn":62},{"ruleId":"166","severity":1,"message":"167","line":63,"column":60,"nodeType":"168","messageId":"169","endLine":63,"endColumn":62},{"ruleId":"149","severity":1,"message":"150","line":2,"column":9,"nodeType":"151","messageId":"152","endLine":2,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":3,"column":23,"nodeType":"151","messageId":"152","endLine":3,"endColumn":31},{"ruleId":"149","severity":1,"message":"208","line":10,"column":13,"nodeType":"151","messageId":"152","endLine":10,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":88,"column":57,"nodeType":"163","endLine":88,"endColumn":152},{"ruleId":"161","severity":1,"message":"162","line":92,"column":29,"nodeType":"163","endLine":92,"endColumn":111},{"ruleId":"143","replacedBy":"209"},{"ruleId":"145","replacedBy":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],["211"],["212"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'lazy' is defined but never used.","'Suspense' is defined but never used.","'getCartDetails' is defined but never used.","'isGuest' is assigned a value but never used.","'user' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'ShippingAddressPart' is defined but never used.","'ReactDOM' is defined but never used.","'PayPalButton' is defined but never used.","'Cards' is defined but never used.","'Client' is defined but never used.","'AmazonPay' is defined but never used.","'usePayPalScriptReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["213"],"'tempMethod' is assigned a value but never used.","'createOrder' is assigned a value but never used.","'onApprove' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'logo' is defined but never used.","'createUser' is defined but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["214"],"'temp' is assigned a value but never used.","'InputGroup' is defined but never used.","'Alert' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'getUSStates' is defined but never used.","'getCanadaStates' is defined but never used.","'getCountries' is defined but never used.","'formDataObj' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'isForgetPassword' is assigned a value but never used.",["211"],["212"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [selectedAddress, state]",{"range":"219","text":"220"},"Update the dependencies array to be: [state]",{"range":"221","text":"222"},[2447,2464],"[selectedAddress, state]",[7090,7092],"[state]"]